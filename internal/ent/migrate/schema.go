// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ActionsColumns holds the columns for the "actions" table.
	ActionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint, Increment: true},
		{Name: "name", Type: field.TypeString, Size: 255},
		{Name: "template", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// ActionsTable holds the schema information for the "actions" table.
	ActionsTable = &schema.Table{
		Name:       "actions",
		Columns:    ActionsColumns,
		PrimaryKey: []*schema.Column{ActionsColumns[0]},
	}
	// AppconfsColumns holds the columns for the "appconfs" table.
	AppconfsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint, Increment: true},
		{Name: "key", Type: field.TypeString},
		{Name: "value", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// AppconfsTable holds the schema information for the "appconfs" table.
	AppconfsTable = &schema.Table{
		Name:       "appconfs",
		Columns:    AppconfsColumns,
		PrimaryKey: []*schema.Column{AppconfsColumns[0]},
	}
	// BindersColumns holds the columns for the "binders" table.
	BindersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true, Size: 255},
		{Name: "category", Type: field.TypeString, Size: 255},
		{Name: "archived_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// BindersTable holds the schema information for the "binders" table.
	BindersTable = &schema.Table{
		Name:       "binders",
		Columns:    BindersColumns,
		PrimaryKey: []*schema.Column{BindersColumns[0]},
	}
	// NotesColumns holds the columns for the "notes" table.
	NotesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint, Increment: true},
		{Name: "binder_id", Type: field.TypeUint, Nullable: true},
		{Name: "publisher", Type: field.TypeString, Size: 255},
		{Name: "comment", Type: field.TypeString, Nullable: true},
		{Name: "content", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// NotesTable holds the schema information for the "notes" table.
	NotesTable = &schema.Table{
		Name:       "notes",
		Columns:    NotesColumns,
		PrimaryKey: []*schema.Column{NotesColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ActionsTable,
		AppconfsTable,
		BindersTable,
		NotesTable,
	}
)

func init() {
}
